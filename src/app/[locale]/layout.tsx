import ContextWrapper from '@/context/context';
import { routing } from '@/i18n/routing';
import { geistMono, geistSans } from '@/utils/font';
import ReactQueryProvider from '@/utils/QueryWrapper';
import type { Metadata } from 'next';
import { NextIntlClientProvider } from 'next-intl';
import { getMessages } from 'next-intl/server';
import { notFound } from 'next/navigation';
import './globals.css';

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout({children,params: { locale }}: Readonly<{
  children: React.ReactNode;
  params: { locale: string };
}>) {
  // Ensure that the incoming `locale` is valid
  if (!routing.locales.includes(locale as any)) {
    notFound();
  }

  // Providing all messages to the client
  // side is the easiest way to get started
  const messages = await getMessages();
  // const queryClient = new QueryClient();

  return (
    <html lang={locale} suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <NextIntlClientProvider messages={messages}>
          <ReactQueryProvider>
            <ContextWrapper>{children}</ContextWrapper>
          </ReactQueryProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
